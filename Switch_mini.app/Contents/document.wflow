<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>444.42</string>
	<key>AMApplicationVersion</key>
	<string>2.9</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>on run {input, parameters}		set preferenceDir to "~/Library/Preferences/Dannephoto/"	do shell script "mkdir -p " &amp; preferenceDir		# Remove old file -- is this still needed?	do shell script "if test $(find '" &amp; preferenceDir &amp; "folder_paths.txt' -mtime +5s); then rm " &amp; preferenceDir &amp; "folder_paths.txt; fi"		set theInputFolder to null		set foldersToProcess to {}		# Process files and folders dropped onto the app	repeat with currentFile in input				if kind of (info for currentFile) is "folder" then			set currentPath to POSIX path of currentFile			# Add this path to the text file of paths to process 			do shell script "echo " &amp; currentPath &amp; " &gt;&gt; " &amp; preferenceDir &amp; "folder_paths.txt"			set foldersToProcess to foldersToProcess &amp; currentPath					else			# display dialog "Only drag folders please"			display notification "Only drag folders please" with title "Switch mini"		end if			end repeat		if not (count of foldersToProcess) &gt; 0 then		try			set allLines to read preferenceDir &amp; "path_1" as text			# read only first line, ignore e.g. blank lines at bottom			set firstLine to item 1 of paragraphs of allLines			set lastFolderPath to POSIX file firstLine			lastFolderPath as alias		on error			# Fall back to a default folder if last folder doesn't exist			set lastFolderPath to path to desktop folder		end try				# Ask user to choose a folder, no folders were dragged on the app icon		set theInputFolder to choose folder with prompt "Please select an input folder with MLV files to process:" default location lastFolderPath	else		set theInputFolder to first item of foldersToProcess	end if		# TODO: rethink preference directory structure. Currently some files are in the main preference dir, and some in the switchmini subfolder.		# Make and refresh tmp config dir	do shell script "rm -rf " &amp; preferenceDir &amp; "switchmini; mkdir -p " &amp; preferenceDir &amp; "switchmini"	# Remember last used path	do shell script "echo " &amp; POSIX path of theInputFolder &amp; " &gt; " &amp; preferenceDir &amp; "path_1"	# Do we still need the statement below?	do shell script "echo " &amp; POSIX path of theInputFolder &amp; " &gt; " &amp; preferenceDir &amp; "switchmini/path_1"		set contentsPath to POSIX path of (path to me) &amp; "Contents/"		activate application "Terminal"	tell application "Terminal"		do script "cd " &amp; contentsPath &amp; "; . Switch_mini_app.sh; clear;"	end tellend run</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>4E795045-255E-4B54-B95E-CA6AC3DF6435</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>ADEE4F85-E2BE-43D6-958A-DBEB310724CF</string>
				<key>UUID</key>
				<string>28D43C0C-7209-4B27-925B-7A13C901DDD3</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>309.500000:777.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>variables</key>
	<array>
		<dict>
			<key>UUID</key>
			<string>594CF8EC-A4F0-401D-A206-655C270359F2</string>
			<key>identifier</key>
			<string>com.apple.Automator.Variable.Storage</string>
			<key>name</key>
			<string>path_1</string>
		</dict>
	</array>
	<key>workflowMetaData</key>
	<dict>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.application</string>
	</dict>
</dict>
</plist>
